{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","name","job","onClick","removeCharacter","Table","Form","initialState","state","handleChange","event","target","value","setState","submitForm","handleSubmit","this","htmlFor","type","id","onChange","Component","App","characters","filter","character","i","className","ReactDOM","render","document","getElementById"],"mappings":"sNA2BMA,EAAc,WAChB,OACI,gCACA,+BACI,sCACA,qCACA,8CAKNC,EAAY,SAACC,GACf,IAAMC,EAAOD,EAAME,cAAcC,KAAI,SAACC,EAAKC,GAC1C,OACG,+BACI,6BAAKD,EAAIE,OACT,6BAAKF,EAAIG,MACT,6BACI,wBAAQC,QAAW,kBAAKR,EAAMS,gBAAgBJ,IAA9C,wBAJGA,MAUf,OAAO,gCAAQJ,KAqBJS,EAtED,SAACV,GACX,IAAOE,EAAkCF,EAAlCE,cAAeO,EAAmBT,EAAnBS,gBACtB,OACI,kCACI,cAAC,EAAD,IACA,cAAC,EAAD,CAAWP,cAAeA,EAAeO,gBAAiBA,Q,OCoCvDE,E,4MAxCXC,aAAe,CACXN,KAAK,GACLC,IAAI,I,EAERM,MAAQ,EAAKD,a,EAEbE,aAAe,SAACC,GACZ,MAAsBA,EAAMC,OAArBV,EAAP,EAAOA,KAAMW,EAAb,EAAaA,MACb,EAAKC,SAAL,eACKZ,EAAMW,K,EAGfE,WAAa,WACT,EAAKnB,MAAMoB,aAAa,EAAKP,OAC7B,EAAKK,SAAS,EAAKN,e,4CAEvB,WACI,MAAoBS,KAAKR,MAAlBP,EAAP,EAAOA,KAAMC,EAAb,EAAaA,IACb,OACI,iCACI,uBAAOe,QAAQ,OAAf,kBACA,uBACIC,KAAK,OACLjB,KAAK,OACLkB,GAAG,OACHP,MAASX,EACTmB,SAAUJ,KAAKP,eACnB,uBAAOQ,QAAQ,MAAf,iBACA,uBACIC,KAAK,OACLjB,KAAK,MACLkB,GAAG,MACHP,MAAOV,EACPkB,SAAUJ,KAAKP,eAEvB,uBAAOS,KAAK,SAASN,MAAM,SAAST,QAASa,KAAKF,oB,GApC3CO,aC8CJC,E,4MA5CXd,MAAQ,CACJe,WAAW,CAEP,CAACtB,KAAM,gBACPC,IAAK,iBAEL,CAACD,KAAM,gBACPC,IAAK,gBAEL,CAACD,KAAK,eACNC,IAAI,sB,EAIZE,gBAAkB,SAACJ,GACf,IAAOuB,EAAc,EAAKf,MAAnBe,WACP,EAAKV,SAAS,CACVU,WAAYA,EAAWC,QAAO,SAACC,EAAUC,GACrC,OAAOA,IAAI1B,Q,EAIvBe,aAAe,SAACU,GACZ,EAAKZ,SAAS,CACVU,WAAW,GAAD,mBAAM,EAAKf,MAAMe,YAAjB,CAA4BE,O,4CAG9C,WAEI,IAAOF,EAAcP,KAAKR,MAAnBe,WACP,OAKC,cAJG,CAIH,OAAKI,UAAU,YAAf,UACO,cAAC,EAAD,CAAO9B,cAAe0B,EAAYnB,gBAAiBY,KAAKZ,kBACxD,cAAC,EAAD,CAAMW,aAAcC,KAAKD,sB,GAtCvBM,a,MCElBO,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.0ff6ebf1.chunk.js","sourcesContent":["import React, {Component} from 'react'\n\nconst Table = (props) => {\n    const {characterData, removeCharacter} = props\n    return (\n        <table>\n            <TableHeader/>\n            <TableBody characterData={characterData} removeCharacter={removeCharacter}/>\n        </table>\n    )\n}\n\n//no more need to define as a class component\n// class Table extends Component{\n//     render(){\n//         const {characterData} = this.props\n//         return (\n//             <table>\n//                 <TableHeader/>\n//               <TableBody characterData = {characterData}/>\n//             </table>\n//         )\n//     }\n// }\n//Above is the class component\n// Below are the simple component \n\nconst TableHeader = ()=>{\n    return (\n        <thead>\n        <tr>\n            <th>Name</th>\n            <th>Job</th>\n            <th>Remove</th>\n        </tr>\n        </thead>\n    )\n}\nconst TableBody = (props) => {\n    const rows = props.characterData.map((row, index) =>\n    {return (\n        <tr key = {index}> \n            <td>{row.name}</td>\n            <td>{row.job}</td>\n            <td>\n                <button onClick = {()=> props.removeCharacter(index)}>Delete</button>\n            </td>\n        </tr>\n        \n    )}\n    )\n    return <tbody>{rows}</tbody>\n    //using the key to help identify each list item.\n}\n// const TableBody = ()=>{\n//     return (\n//         <tbody>\n//         <tr>\n//             <td>Pratee Gupta</td>\n//             <td>SE 1 - PayPal</td>\n//         </tr>\n//         <tr>\n//             <td>Tushar Bhatia</td>\n//             <td>Intern - UBS</td>\n//         </tr>\n//         <tr>\n//             <td>Hardik Mehta</td>\n//             <td>Intern - Nutanix</td>\n//         </tr>\n//     </tbody>\n//     )\n// }\nexport default Table","import React,{Component} from 'react'\n\nclass Form extends Component{\n    initialState = {\n        name:'',\n        job:'',\n    }\n    state = this.initialState\n\n    handleChange = (event) => {\n        const {name, value} = event.target\n        this.setState({\n            [name]:value,\n        })\n    }\n    submitForm = () => {\n        this.props.handleSubmit(this.state)\n        this.setState(this.initialState)\n    }\n    render(){\n        const {name, job} = this.state;\n        return (\n            <form>\n                <label htmlFor=\"name\">Name</label>\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    id=\"name\"\n                    value = {name}\n                    onChange={this.handleChange}/>\n                <label htmlFor=\"job\">Job</label>\n                <input \n                    type=\"text\"\n                    name=\"job\"\n                    id=\"job\"\n                    value={job}\n                    onChange={this.handleChange}\n                />\n            <input type=\"button\" value=\"Submit\" onClick={this.submitForm}/>\n            </form>\n        )\n    }\n}\nexport default Form","import React, {Component} from 'react'\nimport Table from './Table'\nimport Form from './Form'\nclass App extends Component{\n    state = {\n        characters:[\n            \n            {name: 'Prateek Gupta',\n            job: 'SE 1 - PayPal'\n            },\n            {name: 'Tushar Bhatia',\n            job: 'Intern - UBS'\n            },\n            {name:'Hardik Mehta',\n            job:'Intern - Nutanix'\n            }\n        ]\n    }\n    removeCharacter = (index) => {\n        const {characters} = this.state\n        this.setState({\n            characters: characters.filter((character,i)=>{\n                return i!==index\n            }),\n        })\n    }\n    handleSubmit = (character) => {\n        this.setState({\n            characters: [...this.state.characters,character]\n        })\n    }\n    render(){\n        \n        const {characters} = this.state\n        return(\n            // <div className=\"App\">\n            // <h1>Hello World!</h1>\n            // </div>\n         \n         <div className=\"container\">\n                <Table characterData={characters} removeCharacter={this.removeCharacter}/>\n                <Form handleSubmit={this.handleSubmit}/>\n            </div>\n            //using the curly brackets for JS usage\n            //chracterData : to add the properties\n        )\n    }\n    }\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\n//rendering the app as root \nReactDOM.render(<App/>, document.getElementById('root'))"],"sourceRoot":""}